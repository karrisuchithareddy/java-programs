class AAA
{
	public void show()
	{
		System.out.println("Parent show method");
	}
	public void display()
	{
		System.out.println("Parent Display method");
	}
}
class BBB extends AAA
{
	public void show()
	{
		System.out.println("Child show method");
	}
	public void msg()
	{
		System.out.println("Child msg method");
	}
}
public class MethodOverriding {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		BBB b=new BBB();
		b.display();
		b.msg();
		b.show();
		

	}
}
	
	
//usage of SUPER keyword
class AAA
{
	public void show()
	{
		System.out.println("Parent show method");
	}
	public void display()
	{
		System.out.println("Parent Display method");
	}
}
class BBB extends AAA
{
	public void show()
	{
		super.show();//used to access parent class methods with same name
		System.out.println("Child show method");
	}
	public void msg()
	{
		System.out.println("Child msg method");
	}
}
public class MethodOverriding {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		BBB b=new BBB();
		b.display();
		b.msg();
		b.show();
		

	}

}


}



import java.util.Scanner;
class Number
{
	int x;
	Scanner sc=new Scanner(System.in);
	public void getNo()
	{
		System.out.println("Enter a number:");
		x=sc.nextInt();
	}
	void show()
	{
		System.out.println("Decimal:"+x);
	}
}
class Hexa extends Number
{
	void show()
	{
		super.show();
		System.out.println("HexaNumber:"+Integer.toHexString(x));
	}
}
class Octal extends Number
{
	void show()
	{
		super.show();
		System.out.println("Octal:"+Integer.toOctalString(x));
	}
}
public class MethodOverriding2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Hexa h=new Hexa();
		h.getNo();
		h.show();
		
		Octal o=new Octal();
		o.getNo();
		o.show();

	}

}


//USAGE OF this()
class Parent21
{
	public Parent21()
	{
		//this("Aditya");
		System.out.println("Good Morning Guest");
	}
	public Parent21(String name)
	{
		this();
		System.out.println("Good Morning "+name);
	}
}
public class Super1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Parent21 p=new Parent21("Aditya");//calls parameterized constructor at first
      //Parent21 p=new Parent21(); //calls default constructor at first
	}

}

//usage of super() keyword
class GP
{
	int x;
	public GP(int x)
	{
		this.x=x;
	}
	public void showX()
	{
		System.out.println("X="+x);
	}
}
class CP extends GP
{
	int y;
	public CP(int p,int q)
	{
		super(p);
		y=q;
	}
	public void showY()
	{
		System.out.println("Y="+y);
	}
}
class CP2 extends CP
{
	int z;
	public CP2(int p,int q,int r)
	{
		super(p,q);
		z=r;
	}
	public void showZ()
	{
		System.out.println("Z="+z);
	}
}
public class Super3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		CP2 c=new CP2(10,20,30);
		c.showX();
		c.showY();
		c.showZ();

	}

}

//USAGE OF final KEYWORD
final class AAAA//3rd usage
{
	final void show()//2nd usage
	{
		
	}
}
class BBBB extends AAAA//gives an error due to the parent class is made to final class
{
	public void show()//gives an error due to the method in parent class is final
	{
		
	}
}
public class Finaldemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		final float pi=3.14f;
		System.out.println(pi);
		//1st usage //pi=3.15f; //gives an error due to variable is declared as final,so we can't assign a new value to a variable

	}

}


//DYNAMIC METHOD DISPATCHING(RUN-TIME POLYMORPHISM)
class S
{
	public void m1()
	{
		System.out.println("S method");
	}
}
class T extends S
{
	public void m1()
	{
		System.out.println("T method");
	}
}
class R extends S
{
	public void m1()
	{
		System.out.println("R method");
	}
}
public class Dynamic {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		S s;
		s=new S();
		s.m1();
		
		s=new T();
		s.m1();
		
		s=new R();
		s.m1();
				

	}

}

