/*points to remember about interface*/
//Interface is a fully abstract class
//In interface all the methods by default are public abstract
//In interface we can allow to declare constants only
// We are allowed to create a reference variable to Interface but it is not possible to create instance
//The class which implements an interface,it must be give the definitions for all the methods which are declared inside interface otherwise that class will be treated as abstract class
//Interface are used to hide the some of the services of the implemented class
interface I1
{
	void m1();
}
interface I2 
{
	void m2();
}
interface I3 extends I1,I2
{
	void m3();
}
class Test implements I3
{
	public void m1()
	{
		System.out.println("M1 METHOD");
	}
	public void m2()
	{
		System.out.println("M2 METHOD");
	}
	public void m3()
	{
		System.out.println("M3 METHOD");
	}
	public static void main(String args[])
	{
		I3 i;
		i=new Test();
		i.m1();
		i.m2();
		i.m3();
		
	}
}



//LAB PROGRAM
import java.util.Scanner;
interface Internal_Marks
{
	void get_InternalMarks();
	void show_InternalMarks();
}
interface External_Marks
{
	void get_ExternalMarks();
	void show_ExternalMarks();
}
interface Total_Marks extends Internal_Marks,External_Marks
{
	void show_Total();
}
class Marks implements Total_Marks
{
	int m1,p1,c1,m2,p2,c2,s1,s2,s3;
	Scanner sc=new Scanner(System.in);
	public void get_InternalMarks()
	{
		System.out.println("Enter the 3 subjects internal marks\n");
		m1=sc.nextInt();
		p1=sc.nextInt();
		c1=sc.nextInt();
	}
	public void get_ExternalMarks()
	{
		System.out.println("Enter the 3 subjects external marks\n");
		m2=sc.nextInt();
		p2=sc.nextInt();
		c2=sc.nextInt();
	}
	public void show_InternalMarks()
	{
		System.out.println("Internal Marks:\n");
		System.out.println("Maths="+m1+"Physics="+p1+"Chemistry="+c1);
	}
	public void show_ExternalMarks()
	{
		System.out.println("External Marks:\n");
		System.out.println("Maths="+m2+"Physics="+p2+"Chemistry="+c2);
	}
	public void show_Total()
	{
		s1=m1+m2;
		s2=p1+p2;
		s3=c1+c2;
		System.out.println("Total marks="+(s1+s2+s3));
	}
	public static void main(String args[])
	{
		Marks m=new Marks();
		m.get_InternalMarks();
		m.get_ExternalMarks();
		m.show_InternalMarks();
		m.show_ExternalMarks();
		m.show_Total();
	}
}


/*default method usage*/
//without effecting implemented classes of an interface,you can allow to add new methods to an interface then default method is useful
//default methods are allowed to write in interface only
interface I
{
	void m1();
	void m2();
	default void m3()
	{
		System.out.println("Default Method");
	}
}
class T1 implements I
{
	public void m1()
	{
		System.out.println("M1 METHOD");
	}
	public void m2()
	{
		System.out.println("M2 METHOD");
	}
	public void m3()
	{
		System.out.println("Drfault Overrided Method Definition");
	}
}
class T2 implements I
{
	public void m1() {}
	public void m2() {}
}
class T100 implements I
{
	public void m1() {}
	public void m2() {}
}
class Test1 {
public static void main(String atgs[])
{
	I inf;
	inf=new T1();
	inf.m1();
	inf.m2();
	inf.m3();
}
}

