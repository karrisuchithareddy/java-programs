class Stringbuf {
public static void main(String args[])
{
/*StringBuffer s1=new StringBuffer();
System.out.println(s1.capacity());  //16
System.out.println(s1.length());    //0
s1.append("abcdefghijklmnopq");
System.out.println(s1.capacity());
System.out.println(s1.length()); */
/*StringBuffer s2=new StringBuffer("Welcome ");
System.out.println(s2.capacity());  //24
System.out.println(s2.length());    //8  

System.out.println(s2.charAt(4));    //o
s2.setCharAt(4, 'a');
System.out.println(s2);      //Welcame

s2.deleteCharAt(4);
System.out.println(s2);//Welcme

s2.append(" Srinu");
System.out.println(s2);  //Welcme  Srinu

s2.insert(4,"a");
System.out.println(s2);    //Welcame  Srinu

s2.delete(8,16);
System.out.println(s2);     //Welcame

s2.append(true);
System.out.println(s2);    //Welcame true

s2.reverse();
System.out.println(s2);    //  eurt emacleW */
}
}
Important constructors of String class:

1)String s=new String();    //Creates an empty String object
2)String s=new String(String literal);
3)String s=new String(StringBuffer sb);
4)String s=new String(StringBuilder sb);
5)String s=new String(char[] a);

Important methods of String class

charAt(index)
equals()
isEmpty()
replace()
indexOf(char)
toLowerCase()
trim()                    //removing white spaces before and after the strings.(starting and ending)
concat()
equalsIgnoreCase()  //see all lower and upper as same.
length()
substring()            
LastIndexOf()          //last to first checking of index.
toUpperCase()

->Important methods of StringBuffer
*length()
*charAt()
*append()
*delete()
*reverse()
*ensureCapacity()
*capacity()
*setCharAt()
*insert()
*deleteCharAt()
*setlength()
*trimToSize()

//program which reads a line of text and then prints word number,and the no.of.characters in it
/*import java.io.*;
class Strings
{
public static void main(String args[])throws Exception
{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
String input;
input=br.readLine();
String words[]=input.split(" ");
for(int i=0;i<words.length;i++)
{
System.out.println("word"+(i+1)+"-"+words[i].length());
}
}
}*/

//Program which takes two strings and checks whether the string was embeeded or not
/*import java.io.*;
class Strings
{
public static void main(String args[])throws Exception
{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
String s1,s2;
s1=br.readLine();
s2=br.readLine();

if(s1.contains(s2))
  System.out.println("YES");
else
  System.out.println("NO");
}
}*/

//program to read line of text and then find no.of.uppercase,lowercase,digits and symbols in it
/*import java.io.*;
class Strings
{
public static void main(String args[])throws Exception
{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
String s1;
int i,l=0,u=0,d=0,s=0;
s1=br.readLine();

char ch[]=s1.toCharArray();
for(i=0;i<ch.length;i++)
{
 if(Character.isLowerCase(ch[i]))
  l++;
 else if(Character.isUpperCase(ch[i]))
  u++;
 else if(Character.isDigit(ch[i]))
  d++;
 else
  s++;
}
System.out.println(l+" "+u+" "+d+" "+s);
}
}*/

//program to remove characters in the given string except alphabet
/*import java.io.*;
class Strings
{
public static void main(String args[])throws Exception
{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
String s1,s2="";
s1=br.readLine();

char ch[]=s1.toCharArray();
for(int i=0;i<ch.length;i++)
{
 if(Character.isLetter(ch[i]))
   s2=s2+ch[i];
}
System.out.println(s2);
}
}*/

//program to find sum of digits in a given string
/*import java.io.*;
class Strings
{
public static void main(String args[])throws Exception
{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
String s1,s2="";
int i,sum=0;
s1=br.readLine();

char ch[]=s1.toCharArray();
for(i=0;i<ch.length;i++)
{
 if(Character.isDigit(ch[i]))
   sum=sum+(ch[i]-48);
}
System.out.println(sum);
}
}*/


//program to find reverse of a string
/*import java.io.*;
class Strings
{
public static void main(String args[])throws Exception
{
 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
 String s1;
 StringBuffer sb1;
 s1=br.readLine();

 String words[]=s1.split(" ");
 for(int i=0;i<words.length;i++)
 {
  sb1=new StringBuffer(words[i]);
  System.out.print(sb1.reverse()+" ");
 }
}
}*/
